# How To Serve Flask Applications with Gunicorn and Nginx on Ubuntu 20.04
# https://www.digitalocean.com/community/tutorials/how-to-serve-flask-applications-with-gunicorn-and-nginx-on-ubuntu-20-04

1. Installing the components
		sudo apt update
		sudo apt install python3-pip python3-dev build-essential libssl-dev libffi-dev python3-setuptools
		
2. create virtual env
		sudo apt install python3-venv
		mkdir ~/myproject
		cd ~/myproject
		python3 -m venv myprojectenv
		source myprojectenv/bin/activate
		
3. setting up flask application
		pip install wheel
		pip install gunicorn flask
		
4. create a sample app 
		nano ~/myproject/myproject.py

5. code in project.py

		from flask import Flask
		app = Flask(__name__)

		@app.route("/")
		def hello():
			return "<h1 style='color:blue'>Hello There!</h1>"

		if __name__ == "__main__":
			app.run(host='0.0.0.0')
			
6. ufw allow

		sudo ufw allow 5000
		python myproject.py
		
7. type in browser
		http://your_server_ip:5000
		
8. creating the wsgi entry point in the same location where myproject.py is available
		nano ~/myproject/wsgi.py
		
9. code inside wsgi.py
		from myproject import app

		if __name__ == "__main__":
			app.run()

10. configuring gunicorn
		cd ~/myproject
		gunicorn --bind 0.0.0.0:5000 wsgi:app
		
		check: http://your_server_ip:5000
		
		cancel
		deactivate
		
11. Create a service for gunicorn
		sudo nano /etc/systemd/system/myproject.service
		
12. code inside myproject.service		#Remember to replace the username and project paths with your own information
		[Unit]
		Description=Gunicorn instance to serve myproject
		After=network.target

		[Service]
		User=sammy
		Group=www-data
		WorkingDirectory=/home/sammy/myproject
		Environment="PATH=/home/sammy/myproject/myprojectenv/bin"
		ExecStart=/home/sammy/myproject/myprojectenv/bin/gunicorn --workers 3 --bind unix:myproject.sock -m 007 wsgi:app

		[Install]
		WantedBy=multi-user.target
		
13. gunicorn service enable and start
		sudo systemctl start myproject
		sudo systemctl enable myproject
		sudo systemctl status myproject
		
		
14. configure nginx to proxy requests
		sudo nano /etc/nginx/sites-available/myproject
		
15. code inside myproject inside sites-available/myproject
		server {
			listen 80;
			server_name your_domain www.your_domain;

			location / {
				include proxy_params;
				proxy_pass http://unix:/home/sammy/myproject/myproject.sock;
			}
		}
		
16. enable nginx server block configuration 
		sudo ln -s /etc/nginx/sites-available/myproject /etc/nginx/sites-enabled
		sudo nginx -t
		sudo systemctl restart nginx
		
		sudo ufw delete allow 5000
		sudo ufw allow 'Nginx Full'
			
		check # http://your_domain
		
17. error logs
		sudo less /var/log/nginx/error.log: checks the Nginx error logs.
		sudo less /var/log/nginx/access.log: checks the Nginx access logs.
		sudo journalctl -u nginx: checks the Nginx process logs.
		sudo journalctl -u myproject: checks your Flask appâ€™s Gunicorn logs.
		
18. securing the application:
		sudo apt install python3-certbot-nginx
		sudo certbot --nginx -d your_domain -d www.your_domain
		
		sudo ufw delete allow 'Nginx HTTP'
		
		check # https://your_domain